#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
using namespace std;

const int precalc[] = {0, 41037, 85003, 130163, 175867, 222595, 269506, 316527, 364369, 411989, 
	460011, 508658, 557129, 606063, 654554, 703546, 752777, 802391, 851923, 901577, 951143, 1000543, 
	1050514, 1100566, 1150843, 1201429, 1251479, 1301977, 1352177, 1403067, 1453467, 1504507, 1554933, 
	1605621, 1656418, 1707686, 1758349, 1809493, 1860778, 1912201, 1963817, 2015207, 2066453, 2117989, 
	2169451, 2220565, 2272654, 2323769, 2374973, 2426881, 2478478, 2530498, 2582417, 2634307, 2686165, 
	2738161, 2790154, 2843041, 2894739, 2946639, 2998839, 3050557, 3102997, 3155605, 3208541, 3261109, 3313397, 
	3365095, 3418171, 3470639, 3522473, 3574502, 3627578, 3680114, 3733219, 3785423, 3838238, 3890966, 3944026, 
	3996329, 4049561, 4102397, 4154783, 4207979, 4260811, 4313255, 4365757, 4419037, 4472635, 4525643, 4578583, 
	4631906,4685107, 4738661, 4791471, 4844693, 4898343, 4951795, 5005241, 5058386, 5111443};
	
bool isPreprime(int x);

class PreprimeNumbers{
public:
	int nthNumber(int n){
		vector<int> preprime;
		int p = precalc[n / 10000];
		if(n < 10000) preprime.push_back(0);
		
		while(preprime.size() <= n % 10000){
			if(isPreprime(p) == true) preprime.push_back(p);
			++p;
		}
		return preprime[n % 10000];
	}
};
bool isPreprime(int x){
	int cnt = 2;
	
	for(int i = 2; i * i <= x; i++){
		if(x % i == 0){
			if(i * i < x) cnt += 2;
			else cnt += 1;
			if(cnt > 4) return false;
		}
	}
	if(cnt !=  4) return false;
	return true;
}